<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>goat</groupId>
    <artifactId>ProjectLinearity</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>ProjectLinearity</name>

    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Destination for automatic plugin deployment on package -->
        <feather.plugins.dir>C:/Users/jacob/AppData/Roaming/.feather/player-server/servers/7e7c5e85-791b-402e-85dc-044cc36b203d/plugins</feather.plugins.dir>
        <!-- Deployed plugin jar name -->
        <plugin.jar.name>Consegrity.jar</plugin.jar.name>
    </properties>

    <build>
        <defaultGoal>clean package</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- After shading, copy the built JAR to the Feather plugins folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- Also copy on pre-clean so `mvn clean` deploys the last build if present -->
                    <execution>
                        <id>deploy-on-pre-clean</id>
                        <phase>pre-clean</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${feather.plugins.dir}"/>
                                <!-- Copy only if the jar exists; no error if missing -->
                                <copy todir="${feather.plugins.dir}" overwrite="true">
                                    <fileset dir="${project.build.directory}">
                                        <include name="${project.build.finalName}.jar"/>
                                    </fileset>
                                    <mapper type="glob" from="*.jar" to="${plugin.jar.name}"/>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-plugin-jar</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${feather.plugins.dir}"/>
                                <copy file="${project.build.directory}/${project.build.finalName}.jar"
                                      tofile="${feather.plugins.dir}/${plugin.jar.name}"
                                      overwrite="true"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <!-- Filtered resources (YAML, text, etc.) but explicitly exclude binary schematics -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.schem</exclude>
                    <exclude>**/*.schematic</exclude>
                </excludes>
            </resource>
            <!-- Copy schematics verbatim without filtering to avoid binary corruption/errors -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.schem</include>
                    <include>**/*.schematic</include>
                </includes>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>spigotmc-repo</id>
            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>enginehub-repo</id>
            <url>https://maven.enginehub.org/repo/</url>
        </repository>
        <repository>
            <id>fren_gor</id>
            <url>https://nexus.frengor.com/repository/public/</url>
        </repository>
        <repository>
            <id>citizens-repo</id>
            <url>https://maven.citizensnpcs.co/repo</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>1.21.1-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.frengor</groupId>
            <artifactId>ultimateadvancementapi-shadeable</artifactId>
            <version>2.6.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sk89q.worldedit</groupId>
            <artifactId>worldedit-bukkit</artifactId>
            <version>7.3.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.citizensnpcs</groupId>
            <artifactId>citizens-main</artifactId>
            <version>2.0.39-SNAPSHOT</version>
            <type>jar</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project>
